const reverseAndNot = require("../reverseAndNot");

const data = [
  [123, 321123],
  [123456789, 987654321123456789],
  [496, 694496],
  [307, 703307],
  [500, 5500],
  [321, 123321],
  [564, 465564],
  [66, 6666],
  [553, 355553],
  [518, 815518],
  [152, 251152],
  [273, 372273],
  [603, 306603],
  [864, 468864],
  [170, 71170],
  [96, 6996],
  [869, 968869],
  [960, 69960],
  [471, 174471],
  [925, 529925],
  [235, 532235],
  [389, 983389],
  [293, 392293],
  [586, 685586],
  [218, 812218],
  [262, 262262],
  [610, 16610],
  [75, 5775],
  [699, 996699],
  [298, 892298],
  [532, 235532],
  [211, 112211],
  [602, 206602],
  [804, 408804],
  [195, 591195],
  [271, 172271],
  [449, 944449],
  [938, 839938],
  [257, 752257],
  [205, 502205],
  [345, 543345],
  [365, 563365],
  [112, 211112],
  [792, 297792],
  [777, 777777],
  [759, 957759],
  [239, 932239],
  [469, 964469],
  [953, 359953],
  [574, 475574],
  [155, 551155],
  [238, 832238]
];

describe("reverseAndNot", () => {
  describe("Return an integer with input integer backwards and the original integer", () => {
    test.each(data)("reverseAndNot(%p) = %p", (i, result) => {
      let actual = reverseAndNot(i);

      expect(actual).toEqual(result);
    });
  });
});
